generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @unique @default(cuid())
  pwd               String
  email             String   @unique
  username          String?  @unique
  verification_code Int?     @unique
  is_verified       Boolean  @default(false)
  profile_picture   String?
  phone_number      String?
  company           String?
  company_picture   String?
  save              String[] @default([])
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now()) @updatedAt
  is_admin          Boolean  @default(false)
  ref_token         String?
  reset_token       String?
  Post              Post[]
}

model Post {
  id                  String   @id @unique @default(cuid())
  user                User     @relation(fields: [user_id], references: [id])
  user_id             String
  title               String
  address             String
  provinsi            String
  kota                String
  kecamatan           String
  kelurahan           String
  type                String
  sub_type            String
  description         String
  bedroom_qty         String
  bathroom_qty        String
  carport_qty         String?
  story_qty           String?
  bathroom_maid_qty   String?
  bedroom_maid_qty    String?
  total_room          String?
  year_of_build       String?
  facilities_interior String[] @default([])
  facilities_exterior String[] @default([])
  land_area           String?
  property_area       String
  is_rent             Boolean
  rent_period         String?
  interior            String
  price               String
  available_from      DateTime
  price_per_meter     String?
  wattage             String?
  sertificate         String
  map_location        String
  is_archived         Boolean  @default(false)
  picture             String[] @default([])
  created_at          DateTime @default(now())
  updated_at          DateTime @default(now()) @updatedAt
}
